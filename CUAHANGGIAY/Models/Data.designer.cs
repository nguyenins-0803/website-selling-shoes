#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CUAHANGGIAY.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLSHOPGIAY")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertSIZE(SIZE instance);
    partial void UpdateSIZE(SIZE instance);
    partial void DeleteSIZE(SIZE instance);
    partial void InsertCHITIETDH(CHITIETDH instance);
    partial void UpdateCHITIETDH(CHITIETDH instance);
    partial void DeleteCHITIETDH(CHITIETDH instance);
    partial void InsertCHITIETSIZE(CHITIETSIZE instance);
    partial void UpdateCHITIETSIZE(CHITIETSIZE instance);
    partial void DeleteCHITIETSIZE(CHITIETSIZE instance);
    partial void InsertDANHMUC(DANHMUC instance);
    partial void UpdateDANHMUC(DANHMUC instance);
    partial void DeleteDANHMUC(DANHMUC instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertGIOHANG(GIOHANG instance);
    partial void UpdateGIOHANG(GIOHANG instance);
    partial void DeleteGIOHANG(GIOHANG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertROLE(ROLE instance);
    partial void UpdateROLE(ROLE instance);
    partial void DeleteROLE(ROLE instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    #endregion
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<SIZE> SIZEs
		{
			get
			{
				return this.GetTable<SIZE>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDH> CHITIETDHs
		{
			get
			{
				return this.GetTable<CHITIETDH>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETSIZE> CHITIETSIZEs
		{
			get
			{
				return this.GetTable<CHITIETSIZE>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIOHANG> GIOHANGs
		{
			get
			{
				return this.GetTable<GIOHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _MaRole;
		
		private string _TenAdmin;
		
		private string _TaiKhoanAdmin;
		
		private string _MatKhauAdmin;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaRoleChanging(bool value);
    partial void OnMaRoleChanged();
    partial void OnTenAdminChanging(string value);
    partial void OnTenAdminChanged();
    partial void OnTaiKhoanAdminChanging(string value);
    partial void OnTaiKhoanAdminChanged();
    partial void OnMatKhauAdminChanging(string value);
    partial void OnMatKhauAdminChanged();
    #endregion
		
		public ADMIN()
		{
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRole", DbType="Bit NOT NULL")]
		public bool MaRole
		{
			get
			{
				return this._MaRole;
			}
			set
			{
				if ((this._MaRole != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRoleChanging(value);
					this.SendPropertyChanging();
					this._MaRole = value;
					this.SendPropertyChanged("MaRole");
					this.OnMaRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanAdmin", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoanAdmin
		{
			get
			{
				return this._TaiKhoanAdmin;
			}
			set
			{
				if ((this._TaiKhoanAdmin != value))
				{
					this.OnTaiKhoanAdminChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanAdmin = value;
					this.SendPropertyChanged("TaiKhoanAdmin");
					this.OnTaiKhoanAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauAdmin", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhauAdmin
		{
			get
			{
				return this._MatKhauAdmin;
			}
			set
			{
				if ((this._MatKhauAdmin != value))
				{
					this.OnMatKhauAdminChanging(value);
					this.SendPropertyChanging();
					this._MatKhauAdmin = value;
					this.SendPropertyChanged("MatKhauAdmin");
					this.OnMatKhauAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ADMIN", Storage="_ROLE", ThisKey="MaRole", OtherKey="MaRole", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.ADMINs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.ADMINs.Add(this);
						this._MaRole = value.MaRole;
					}
					else
					{
						this._MaRole = default(bool);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIZE")]
	public partial class SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSize;
		
		private string _TenSize;
		
		private EntitySet<CHITIETDH> _CHITIETDHs;
		
		private EntitySet<CHITIETSIZE> _CHITIETSIZEs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSizeChanging(int value);
    partial void OnMaSizeChanged();
    partial void OnTenSizeChanging(string value);
    partial void OnTenSizeChanged();
    #endregion
		
		public SIZE()
		{
			this._CHITIETDHs = new EntitySet<CHITIETDH>(new Action<CHITIETDH>(this.attach_CHITIETDHs), new Action<CHITIETDH>(this.detach_CHITIETDHs));
			this._CHITIETSIZEs = new EntitySet<CHITIETSIZE>(new Action<CHITIETSIZE>(this.attach_CHITIETSIZEs), new Action<CHITIETSIZE>(this.detach_CHITIETSIZEs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSize", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string TenSize
		{
			get
			{
				return this._TenSize;
			}
			set
			{
				if ((this._TenSize != value))
				{
					this.OnTenSizeChanging(value);
					this.SendPropertyChanging();
					this._TenSize = value;
					this.SendPropertyChanged("TenSize");
					this.OnTenSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETDH", Storage="_CHITIETDHs", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<CHITIETDH> CHITIETDHs
		{
			get
			{
				return this._CHITIETDHs;
			}
			set
			{
				this._CHITIETDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETSIZE", Storage="_CHITIETSIZEs", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<CHITIETSIZE> CHITIETSIZEs
		{
			get
			{
				return this._CHITIETSIZEs;
			}
			set
			{
				this._CHITIETSIZEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_GIOHANG", Storage="_GIOHANGs", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = this;
		}
		
		private void detach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = null;
		}
		
		private void attach_CHITIETSIZEs(CHITIETSIZE entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = this;
		}
		
		private void detach_CHITIETSIZEs(CHITIETSIZE entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDH")]
	public partial class CHITIETDH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDH;
		
		private string _MaSP;
		
		private int _MaSize;
		
		private int _SLMua;
		
		private System.Nullable<int> _GiaMua;
		
		private EntityRef<SIZE> _SIZE;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaSizeChanging(int value);
    partial void OnMaSizeChanged();
    partial void OnSLMuaChanging(int value);
    partial void OnSLMuaChanged();
    partial void OnGiaMuaChanging(System.Nullable<int> value);
    partial void OnGiaMuaChanged();
    #endregion
		
		public CHITIETDH()
		{
			this._SIZE = default(EntityRef<SIZE>);
			this._DONHANG = default(EntityRef<DONHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._SIZE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLMua", DbType="Int NOT NULL")]
		public int SLMua
		{
			get
			{
				return this._SLMua;
			}
			set
			{
				if ((this._SLMua != value))
				{
					this.OnSLMuaChanging(value);
					this.SendPropertyChanging();
					this._SLMua = value;
					this.SendPropertyChanged("SLMua");
					this.OnSLMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaMua", DbType="Int")]
		public System.Nullable<int> GiaMua
		{
			get
			{
				return this._GiaMua;
			}
			set
			{
				if ((this._GiaMua != value))
				{
					this.OnGiaMuaChanging(value);
					this.SendPropertyChanging();
					this._GiaMua = value;
					this.SendPropertyChanged("GiaMua");
					this.OnGiaMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETDH", Storage="_SIZE", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public SIZE SIZE
		{
			get
			{
				return this._SIZE.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE.Entity;
				if (((previousValue != value) 
							|| (this._SIZE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE.Entity = null;
						previousValue.CHITIETDHs.Remove(this);
					}
					this._SIZE.Entity = value;
					if ((value != null))
					{
						value.CHITIETDHs.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(int);
					}
					this.SendPropertyChanged("SIZE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDH", Storage="_DONHANG", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDHs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDHs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(string);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDH", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDHs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETSIZE")]
	public partial class CHITIETSIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private int _MaSize;
		
		private int _SoLuong;
		
		private EntityRef<SIZE> _SIZE;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaSizeChanging(int value);
    partial void OnMaSizeChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CHITIETSIZE()
		{
			this._SIZE = default(EntityRef<SIZE>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._SIZE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CHITIETSIZE", Storage="_SIZE", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public SIZE SIZE
		{
			get
			{
				return this._SIZE.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE.Entity;
				if (((previousValue != value) 
							|| (this._SIZE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE.Entity = null;
						previousValue.CHITIETSIZEs.Remove(this);
					}
					this._SIZE.Entity = value;
					if ((value != null))
					{
						value.CHITIETSIZEs.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(int);
					}
					this.SendPropertyChanged("SIZE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSIZE", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETSIZEs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETSIZEs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDM;
		
		private string _TenDM;
		
		private string _DanhMucCha;
		
		private bool _IsDeleted;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnTenDMChanging(string value);
    partial void OnTenDMChanged();
    partial void OnDanhMucChaChanging(string value);
    partial void OnDanhMucChaChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public DANHMUC()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDM", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDM
		{
			get
			{
				return this._TenDM;
			}
			set
			{
				if ((this._TenDM != value))
				{
					this.OnTenDMChanging(value);
					this.SendPropertyChanging();
					this._TenDM = value;
					this.SendPropertyChanged("TenDM");
					this.OnTenDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucCha", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DanhMucCha
		{
			get
			{
				return this._DanhMucCha;
			}
			set
			{
				if ((this._DanhMucCha != value))
				{
					this.OnDanhMucChaChanging(value);
					this.SendPropertyChanging();
					this._DanhMucCha = value;
					this.SendPropertyChanged("DanhMucCha");
					this.OnDanhMucChaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_SANPHAMs", ThisKey="MaDM", OtherKey="MaDM")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDH;
		
		private string _MaKH;
		
		private System.Nullable<decimal> _TongTien;
		
		private System.DateTime _NgayMua;
		
		private string _DiaChi;
		
		private string _ThanhToan;
		
		private string _TrangThai;
		
		private EntitySet<CHITIETDH> _CHITIETDHs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    partial void OnNgayMuaChanging(System.DateTime value);
    partial void OnNgayMuaChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnThanhToanChanging(string value);
    partial void OnThanhToanChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDHs = new EntitySet<CHITIETDH>(new Action<CHITIETDH>(this.attach_CHITIETDHs), new Action<CHITIETDH>(this.detach_CHITIETDHs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMua", DbType="DateTime NOT NULL")]
		public System.DateTime NgayMua
		{
			get
			{
				return this._NgayMua;
			}
			set
			{
				if ((this._NgayMua != value))
				{
					this.OnNgayMuaChanging(value);
					this.SendPropertyChanging();
					this._NgayMua = value;
					this.SendPropertyChanged("NgayMua");
					this.OnNgayMuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThanhToan
		{
			get
			{
				return this._ThanhToan;
			}
			set
			{
				if ((this._ThanhToan != value))
				{
					this.OnThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ThanhToan = value;
					this.SendPropertyChanged("ThanhToan");
					this.OnThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDH", Storage="_CHITIETDHs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CHITIETDH> CHITIETDHs
		{
			get
			{
				return this._CHITIETDHs;
			}
			set
			{
				this._CHITIETDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIOHANG")]
	public partial class GIOHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _MaSP;
		
		private int _MaSize;
		
		private int _SoLuong;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<SIZE> _SIZE;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaSizeChanging(int value);
    partial void OnMaSizeChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public GIOHANG()
		{
			this._SIZE = default(EntityRef<SIZE>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._SIZE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_GIOHANG", Storage="_SIZE", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public SIZE SIZE
		{
			get
			{
				return this._SIZE.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE.Entity;
				if (((previousValue != value) 
							|| (this._SIZE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._SIZE.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(int);
					}
					this.SendPropertyChanged("SIZE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_GIOHANG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIOHANG", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.GIOHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.GIOHANGs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private bool _MaRole;
		
		private string _TenKH;
		
		private string _MatKhauKH;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _Gmail;
		
		private string _ResetCode;
		
		private System.Nullable<System.DateTime> _ResetCodeSentTime;
		
		private bool _IsDeleted;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaRoleChanging(bool value);
    partial void OnMaRoleChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnMatKhauKHChanging(string value);
    partial void OnMatKhauKHChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnGmailChanging(string value);
    partial void OnGmailChanged();
    partial void OnResetCodeChanging(string value);
    partial void OnResetCodeChanged();
    partial void OnResetCodeSentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnResetCodeSentTimeChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRole", DbType="Bit NOT NULL")]
		public bool MaRole
		{
			get
			{
				return this._MaRole;
			}
			set
			{
				if ((this._MaRole != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaRoleChanging(value);
					this.SendPropertyChanging();
					this._MaRole = value;
					this.SendPropertyChanged("MaRole");
					this.OnMaRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhauKH
		{
			get
			{
				return this._MatKhauKH;
			}
			set
			{
				if ((this._MatKhauKH != value))
				{
					this.OnMatKhauKHChanging(value);
					this.SendPropertyChanging();
					this._MatKhauKH = value;
					this.SendPropertyChanged("MatKhauKH");
					this.OnMatKhauKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Gmail
		{
			get
			{
				return this._Gmail;
			}
			set
			{
				if ((this._Gmail != value))
				{
					this.OnGmailChanging(value);
					this.SendPropertyChanging();
					this._Gmail = value;
					this.SendPropertyChanged("Gmail");
					this.OnGmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetCode", DbType="VarChar(100)")]
		public string ResetCode
		{
			get
			{
				return this._ResetCode;
			}
			set
			{
				if ((this._ResetCode != value))
				{
					this.OnResetCodeChanging(value);
					this.SendPropertyChanging();
					this._ResetCode = value;
					this.SendPropertyChanged("ResetCode");
					this.OnResetCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetCodeSentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ResetCodeSentTime
		{
			get
			{
				return this._ResetCodeSentTime;
			}
			set
			{
				if ((this._ResetCodeSentTime != value))
				{
					this.OnResetCodeSentTimeChanging(value);
					this.SendPropertyChanging();
					this._ResetCodeSentTime = value;
					this.SendPropertyChanged("ResetCodeSentTime");
					this.OnResetCodeSentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_GIOHANG", Storage="_GIOHANGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_KHACHHANG", Storage="_ROLE", ThisKey="MaRole", OtherKey="MaRole", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MaRole = value.MaRole;
					}
					else
					{
						this._MaRole = default(bool);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLE")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private bool _MaRole;
		
		private string _RoleName;
		
		private EntitySet<ADMIN> _ADMINs;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaRoleChanging(bool value);
    partial void OnMaRoleChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public ROLE()
		{
			this._ADMINs = new EntitySet<ADMIN>(new Action<ADMIN>(this.attach_ADMINs), new Action<ADMIN>(this.detach_ADMINs));
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaRole", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool MaRole
		{
			get
			{
				return this._MaRole;
			}
			set
			{
				if ((this._MaRole != value))
				{
					this.OnMaRoleChanging(value);
					this.SendPropertyChanging();
					this._MaRole = value;
					this.SendPropertyChanged("MaRole");
					this.OnMaRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ADMIN", Storage="_ADMINs", ThisKey="MaRole", OtherKey="MaRole")]
		public EntitySet<ADMIN> ADMINs
		{
			get
			{
				return this._ADMINs;
			}
			set
			{
				this._ADMINs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MaRole", OtherKey="MaRole")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_ADMINs(ADMIN entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _MaDM;
		
		private string _TenSP;
		
		private string _Mota;
		
		private string _AnhMinhHoa;
		
		private string _MauSP;
		
		private int _GiaSP;
		
		private string _ThuongHieu;
		
		private string _ChatLieu;
		
		private string _KieuDang;
		
		private bool _IsDeleted;
		
		private EntitySet<CHITIETDH> _CHITIETDHs;
		
		private EntitySet<CHITIETSIZE> _CHITIETSIZEs;
		
		private EntitySet<GIOHANG> _GIOHANGs;
		
		private EntityRef<DANHMUC> _DANHMUC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaDMChanging(string value);
    partial void OnMaDMChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnAnhMinhHoaChanging(string value);
    partial void OnAnhMinhHoaChanged();
    partial void OnMauSPChanging(string value);
    partial void OnMauSPChanged();
    partial void OnGiaSPChanging(int value);
    partial void OnGiaSPChanged();
    partial void OnThuongHieuChanging(string value);
    partial void OnThuongHieuChanged();
    partial void OnChatLieuChanging(string value);
    partial void OnChatLieuChanged();
    partial void OnKieuDangChanging(string value);
    partial void OnKieuDangChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETDHs = new EntitySet<CHITIETDH>(new Action<CHITIETDH>(this.attach_CHITIETDHs), new Action<CHITIETDH>(this.detach_CHITIETDHs));
			this._CHITIETSIZEs = new EntitySet<CHITIETSIZE>(new Action<CHITIETSIZE>(this.attach_CHITIETSIZEs), new Action<CHITIETSIZE>(this.detach_CHITIETSIZEs));
			this._GIOHANGs = new EntitySet<GIOHANG>(new Action<GIOHANG>(this.attach_GIOHANGs), new Action<GIOHANG>(this.detach_GIOHANGs));
			this._DANHMUC = default(EntityRef<DANHMUC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDM", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaDM
		{
			get
			{
				return this._MaDM;
			}
			set
			{
				if ((this._MaDM != value))
				{
					if (this._DANHMUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDMChanging(value);
					this.SendPropertyChanging();
					this._MaDM = value;
					this.SendPropertyChanged("MaDM");
					this.OnMaDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhMinhHoa", DbType="NVarChar(255)")]
		public string AnhMinhHoa
		{
			get
			{
				return this._AnhMinhHoa;
			}
			set
			{
				if ((this._AnhMinhHoa != value))
				{
					this.OnAnhMinhHoaChanging(value);
					this.SendPropertyChanging();
					this._AnhMinhHoa = value;
					this.SendPropertyChanged("AnhMinhHoa");
					this.OnAnhMinhHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MauSP", DbType="NVarChar(100)")]
		public string MauSP
		{
			get
			{
				return this._MauSP;
			}
			set
			{
				if ((this._MauSP != value))
				{
					this.OnMauSPChanging(value);
					this.SendPropertyChanging();
					this._MauSP = value;
					this.SendPropertyChanged("MauSP");
					this.OnMauSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSP", DbType="Int NOT NULL")]
		public int GiaSP
		{
			get
			{
				return this._GiaSP;
			}
			set
			{
				if ((this._GiaSP != value))
				{
					this.OnGiaSPChanging(value);
					this.SendPropertyChanging();
					this._GiaSP = value;
					this.SendPropertyChanged("GiaSP");
					this.OnGiaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongHieu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ThuongHieu
		{
			get
			{
				return this._ThuongHieu;
			}
			set
			{
				if ((this._ThuongHieu != value))
				{
					this.OnThuongHieuChanging(value);
					this.SendPropertyChanging();
					this._ThuongHieu = value;
					this.SendPropertyChanged("ThuongHieu");
					this.OnThuongHieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatLieu", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ChatLieu
		{
			get
			{
				return this._ChatLieu;
			}
			set
			{
				if ((this._ChatLieu != value))
				{
					this.OnChatLieuChanging(value);
					this.SendPropertyChanging();
					this._ChatLieu = value;
					this.SendPropertyChanged("ChatLieu");
					this.OnChatLieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KieuDang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string KieuDang
		{
			get
			{
				return this._KieuDang;
			}
			set
			{
				if ((this._KieuDang != value))
				{
					this.OnKieuDangChanging(value);
					this.SendPropertyChanging();
					this._KieuDang = value;
					this.SendPropertyChanged("KieuDang");
					this.OnKieuDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDH", Storage="_CHITIETDHs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CHITIETDH> CHITIETDHs
		{
			get
			{
				return this._CHITIETDHs;
			}
			set
			{
				this._CHITIETDHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSIZE", Storage="_CHITIETSIZEs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CHITIETSIZE> CHITIETSIZEs
		{
			get
			{
				return this._CHITIETSIZEs;
			}
			set
			{
				this._CHITIETSIZEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_GIOHANG", Storage="_GIOHANGs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<GIOHANG> GIOHANGs
		{
			get
			{
				return this._GIOHANGs;
			}
			set
			{
				this._GIOHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUC_SANPHAM", Storage="_DANHMUC", ThisKey="MaDM", OtherKey="MaDM", IsForeignKey=true)]
		public DANHMUC DANHMUC
		{
			get
			{
				return this._DANHMUC.Entity;
			}
			set
			{
				DANHMUC previousValue = this._DANHMUC.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUC.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUC.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaDM = value.MaDM;
					}
					else
					{
						this._MaDM = default(string);
					}
					this.SendPropertyChanged("DANHMUC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDHs(CHITIETDH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETSIZEs(CHITIETSIZE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETSIZEs(CHITIETSIZE entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_GIOHANGs(GIOHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
}
#pragma warning restore 1591
